shiny::runApp()
runApp()
library(jsonlite)
# Data loading and preprocessing function
load_and_process_data <- function() {
df <- read.csv("tmdb5000.csv", stringsAsFactors = FALSE)
# Helper function to parse JSON columns
parse_json_column <- function(json_col) {
lapply(json_col, function(x) {
if (is.na(x) || x == "" || x == "[]") return(character(0))
tryCatch({
parsed <- fromJSON(x)
if (is.data.frame(parsed)) return(parsed$name)
return(character(0))
}, error = function(e) character(0))
})
}
# Parse genres, cast, and crew columns (you'll need to implement this with your actual data)
df$genres_list <- parse_json_column(df$genres)
# Add derived columns
# df$release_year <- as.numeric(substr(df$release_date, 1, 4))
# df$profit <- df$revenue - df$budget
# df$roi <- ifelse(df$budget > 0, (df$revenue - df$budget) / df$budget * 100, 0)
}
# Load data
movies_data <- load_and_process_data()
library(jsonlite)
# Data loading and preprocessing function
load_and_process_data <- function() {
df <- read.csv("tmdb5000.csv", stringsAsFactors = FALSE)
# Helper function to parse JSON columns
parse_json_column <- function(json_col) {
lapply(json_col, function(x) {
if (is.na(x) || x == "" || x == "[]") return(character(0))
tryCatch({
parsed <- fromJSON(x)
if (is.data.frame(parsed)) return(parsed$name)
return(character(0))
}, error = function(e) character(0))
})
}
# Parse genres, cast, and crew columns (you'll need to implement this with your actual data)
df$genres_list <- parse_json_column(df$genres)
# Add derived columns
# df$release_year <- as.numeric(substr(df$release_date, 1, 4))
# df$profit <- df$revenue - df$budget
# df$roi <- ifelse(df$budget > 0, (df$revenue - df$budget) / df$budget * 100, 0)
}
# Load data
movies_data <- load_and_process_data()
print(movies_data$genres_list[[1]]))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
